[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "EEMB Data Management Workshop",
    "section": "",
    "text": "Preface\n\nArtwork by Allison Horst\nWhat: A data management workshop!\nFor whom: anyone who wants to learn about data management!\nWhen: Wednesday June 5 2024, 9 - 11 AM\nOrganizers: Piper Lovegreen and An Bui\nPanelists: Zoe Zilz, Caitlin Nordheim-Maestas, An Bui",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "01_packages.html",
    "href": "01_packages.html",
    "title": "Packages we discussed",
    "section": "",
    "text": "library(tidyverse)\nImage source: University of Cape Town Faculty of Science: Statistical Sciences\nlibrary(tidyverse)\nA package of packages:\nPackage info",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Packages we discussed</span>"
    ]
  },
  {
    "objectID": "01_packages.html#librarytidyverse",
    "href": "01_packages.html#librarytidyverse",
    "title": "Packages we discussed",
    "section": "",
    "text": "dplyr\n\nforcats\n\nggplot2\n\nlubridate\n\npurrr\n\nreadr\n\nstringr\n\ntibble\n\ntidyr",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Packages we discussed</span>"
    ]
  },
  {
    "objectID": "01_packages.html#libraryhere",
    "href": "01_packages.html#libraryhere",
    "title": "Packages we discussed",
    "section": "library(here)",
    "text": "library(here)\n\n\n\n\n\nArtwork by Allison Horst\n\nlibrary(here)\n\nOrganizes your file paths!\n Package info",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Packages we discussed</span>"
    ]
  },
  {
    "objectID": "01_packages.html#libraryrepmis",
    "href": "01_packages.html#libraryrepmis",
    "title": "Packages we discussed",
    "section": "library(repmis)",
    "text": "library(repmis)\n\nlibrary(repmis)\n\nReads in data from Dropbox!\n Package info",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Packages we discussed</span>"
    ]
  },
  {
    "objectID": "01_packages.html#libraryjanitor",
    "href": "01_packages.html#libraryjanitor",
    "title": "Packages we discussed",
    "section": "library(janitor)",
    "text": "library(janitor)\n\n\n\n\n\nArtwork by Allison Horst\n\nlibrary(janitor)\n\nGeneral cleaning functions:\n Package info",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Packages we discussed</span>"
    ]
  },
  {
    "objectID": "02_reading-your-data.html",
    "href": "02_reading-your-data.html",
    "title": "2  Reading your data",
    "section": "",
    "text": "2.1 Reading your data into RStudio\nIf your file is in a folder called “data” like in this repository:\ntest_data &lt;- read_csv(here(\"data\", # folder name: data\n                           \"data.csv\")) # file name: data.csv\nIf your file is in the root directory (i.e. the same folder as the .Rproj file)\ntest_data &lt;- read_csv(\"data.csv\") # just the file name\nIf your file is an Excel sheet:\ndata_from_excel &lt;- read_xlsx(\"data.xlsx\", # file name\n                             sheet = \"This is the sheet name\", # if there are multiple sheets in the .xlsx file\n                             na = c(\"NA\")) # explicitly name what the NAs are in the sheet - not necessary, but sometimes nice!\nIf your file is on Dropbox:\ndata_from_dropbox &lt;- source_data(\"share link goes here\") # paste the share link, change dl=0 to dl=1 at the end (dono't know why but it works!)\nIf your file is on google sheets:\n# get the sheet id from the url\nsheet_id &lt;- \"insert sheet id here\"\n\ndata_from_google_sheets &lt;- read_sheet(sheet_id, # the sheet id that you stored above\n                                      sheet = \"insert sheet name here\") # if you have multiple sheets, you can select the sheet you want\nNote that when you run this, googlesheets4 will ask for authentication. Critically, this only works if you are there to interact with the package (i.e. actually authenticate yourself); therefore, this is not a good option if you are rendering/knitting your code. One solution is to make the sheet public (which isn’t always ideal). Another solution is to have a separate script in your project that reads stuff in from Google Sheets and creates .csv files on your computer, and use the .csv files downloaded from Google Sheets in your down stream analysis.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Reading your data</span>"
    ]
  },
  {
    "objectID": "03_looking-at-your-data.html",
    "href": "03_looking-at-your-data.html",
    "title": "3  Looking at your data",
    "section": "",
    "text": "3.1 Look at your data\nIn this example, we’re going to use global fishery catch data from Tidy Tuesday 2021-10-12.\nFirst: we’ll read in the data:\nlibrary(tidyverse)\nlibrary(here)\nglobal_catch &lt;- read_csv(here(\"data\", # data is in the \"data\" folder in this repository\n                         \"global-fishery-catch-by-sector.csv\")) # file name\nThen, we can look at it using glimpse().\nglimpse(global_catch)\n\nRows: 61\nColumns: 8\n$ Entity                                &lt;chr&gt; \"World\", \"World\", \"World\", \"Worl…\n$ Code                                  &lt;chr&gt; \"OWID_WRL\", \"OWID_WRL\", \"OWID_WR…\n$ Year                                  &lt;dbl&gt; 1950, 1951, 1952, 1953, 1954, 19…\n$ `Artisanal (small-scale commercial)`  &lt;dbl&gt; 7526795, 8278304, 8272109, 84692…\n$ Discards                              &lt;dbl&gt; 5874170, 6278225, 7230311, 71729…\n$ `Industrial (large-scale commercial)` &lt;dbl&gt; 14566338, 15417937, 16463942, 17…\n$ Recreational                          &lt;dbl&gt; 268260, 284319, 293558, 292070, …\n$ Subsistence                           &lt;dbl&gt; 2677833, 2704471, 2728141, 27530…\nglimpse() gives similar information as str(): use either (or both!).\nstr(global_catch)\n\nspc_tbl_ [61 × 8] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ Entity                             : chr [1:61] \"World\" \"World\" \"World\" \"World\" ...\n $ Code                               : chr [1:61] \"OWID_WRL\" \"OWID_WRL\" \"OWID_WRL\" \"OWID_WRL\" ...\n $ Year                               : num [1:61] 1950 1951 1952 1953 1954 ...\n $ Artisanal (small-scale commercial) : num [1:61] 7526795 8278304 8272109 8469284 9226926 ...\n $ Discards                           : num [1:61] 5874170 6278225 7230311 7172937 8012930 ...\n $ Industrial (large-scale commercial): num [1:61] 14566338 15417937 16463942 17163789 18340199 ...\n $ Recreational                       : num [1:61] 268260 284319 293558 292070 304398 ...\n $ Subsistence                        : num [1:61] 2677833 2704471 2728141 2753098 2895153 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   Entity = col_character(),\n  ..   Code = col_character(),\n  ..   Year = col_double(),\n  ..   `Artisanal (small-scale commercial)` = col_double(),\n  ..   Discards = col_double(),\n  ..   `Industrial (large-scale commercial)` = col_double(),\n  ..   Recreational = col_double(),\n  ..   Subsistence = col_double()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt;\ncolnames(global_catch)\n\n[1] \"Entity\"                              \"Code\"                               \n[3] \"Year\"                                \"Artisanal (small-scale commercial)\" \n[5] \"Discards\"                            \"Industrial (large-scale commercial)\"\n[7] \"Recreational\"                        \"Subsistence\"\nsample_n(global_catch,\n         size = 10)\n\n# A tibble: 10 × 8\n   Entity Code      Year Artisanal (small-scal…¹ Discards Industrial (large-sc…²\n   &lt;chr&gt;  &lt;chr&gt;    &lt;dbl&gt;                   &lt;dbl&gt;    &lt;dbl&gt;                  &lt;dbl&gt;\n 1 World  OWID_WRL  1956                10303408  8692551               19902604\n 2 World  OWID_WRL  2001                20046446 11506452               84201719\n 3 World  OWID_WRL  1983                15300068 12388473               65689361\n 4 World  OWID_WRL  1963                11005246 12332187               36093501\n 5 World  OWID_WRL  1952                 8272109  7230311               16463942\n 6 World  OWID_WRL  1974                13309012 11416434               56720856\n 7 World  OWID_WRL  1967                12386026 13549800               49828456\n 8 World  OWID_WRL  1955                 9545554  8340179               18728089\n 9 World  OWID_WRL  1977                13892726 10889729               59241222\n10 World  OWID_WRL  1960                10703245 10896146               25853941\n# ℹ abbreviated names: ¹​`Artisanal (small-scale commercial)`,\n#   ²​`Industrial (large-scale commercial)`\n# ℹ 2 more variables: Recreational &lt;dbl&gt;, Subsistence &lt;dbl&gt;\nskimr::skim(global_catch)\n\n\nData summary\n\n\nName\nglobal_catch\n\n\nNumber of rows\n61\n\n\nNumber of columns\n8\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n6\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nEntity\n0\n1\n5\n5\n0\n1\n0\n\n\nCode\n0\n1\n8\n8\n0\n1\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nYear\n0\n1\n1980.0\n17.75\n1950\n1965\n1980\n1995\n2010\n▇▇▇▇▇\n\n\nArtisanal (small-scale commercial)\n0\n1\n15180177.2\n4255916.20\n7526795\n11653978\n14688464\n19665232\n21828623\n▅▇▆▅▇\n\n\nDiscards\n0\n1\n11834829.3\n2601005.59\n5874170\n10014530\n11712961\n13595692\n16962727\n▂▃▇▆▃\n\n\nIndustrial (large-scale commercial)\n0\n1\n59491189.3\n24241541.41\n14566338\n41475194\n62459956\n80593708\n90068159\n▃▂▃▃▇\n\n\nRecreational\n0\n1\n609926.8\n194120.54\n268260\n405857\n731511\n769491\n849021\n▃▂▁▁▇\n\n\nSubsistence\n0\n1\n3777210.0\n416715.61\n2677833\n3630156\n3911536\n4072844\n4226487\n▂▂▁▆▇",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Looking at your data</span>"
    ]
  },
  {
    "objectID": "04_cleaning.html",
    "href": "04_cleaning.html",
    "title": "4  Cleaning",
    "section": "",
    "text": "4.1 Clean it up\nlibrary(tidyverse)\nlibrary(janitor)\nlibrary(here)\n\nglobal_catch &lt;- read_csv(here(\"data\", # data is in the \"data\" folder in this repository\n                         \"global-fishery-catch-by-sector.csv\")) # file name\nglobal_catch %&gt;% \n  # new function: clean_names\n  # makes the column names nicer! compare this with the column names from `colnames(global_catch)` output from above\n  clean_names()\n\n# A tibble: 61 × 8\n   entity code      year artisanal_small_scale…¹ discards industrial_large_sca…²\n   &lt;chr&gt;  &lt;chr&gt;    &lt;dbl&gt;                   &lt;dbl&gt;    &lt;dbl&gt;                  &lt;dbl&gt;\n 1 World  OWID_WRL  1950                 7526795  5874170               14566338\n 2 World  OWID_WRL  1951                 8278304  6278225               15417937\n 3 World  OWID_WRL  1952                 8272109  7230311               16463942\n 4 World  OWID_WRL  1953                 8469284  7172937               17163789\n 5 World  OWID_WRL  1954                 9226926  8012930               18340199\n 6 World  OWID_WRL  1955                 9545554  8340179               18728089\n 7 World  OWID_WRL  1956                10303408  8692551               19902604\n 8 World  OWID_WRL  1957                10425695  8998732               20030089\n 9 World  OWID_WRL  1958                10172920  9255992               20520801\n10 World  OWID_WRL  1959                10385711  9908003               23422702\n# ℹ 51 more rows\n# ℹ abbreviated names: ¹​artisanal_small_scale_commercial,\n#   ²​industrial_large_scale_commercial\n# ℹ 2 more variables: recreational &lt;dbl&gt;, subsistence &lt;dbl&gt;\nglobal_catch %&gt;% \n  clean_names() %&gt;% # same as above\n\n  # new function: mutate\n  # create new columns to calculate catch divided by 1000000\n  mutate(artisanal = artisanal_small_scale_commercial/1000000,\n         industrial = industrial_large_scale_commercial/1000000)\n\n# A tibble: 61 × 10\n   entity code      year artisanal_small_scale…¹ discards industrial_large_sca…²\n   &lt;chr&gt;  &lt;chr&gt;    &lt;dbl&gt;                   &lt;dbl&gt;    &lt;dbl&gt;                  &lt;dbl&gt;\n 1 World  OWID_WRL  1950                 7526795  5874170               14566338\n 2 World  OWID_WRL  1951                 8278304  6278225               15417937\n 3 World  OWID_WRL  1952                 8272109  7230311               16463942\n 4 World  OWID_WRL  1953                 8469284  7172937               17163789\n 5 World  OWID_WRL  1954                 9226926  8012930               18340199\n 6 World  OWID_WRL  1955                 9545554  8340179               18728089\n 7 World  OWID_WRL  1956                10303408  8692551               19902604\n 8 World  OWID_WRL  1957                10425695  8998732               20030089\n 9 World  OWID_WRL  1958                10172920  9255992               20520801\n10 World  OWID_WRL  1959                10385711  9908003               23422702\n# ℹ 51 more rows\n# ℹ abbreviated names: ¹​artisanal_small_scale_commercial,\n#   ²​industrial_large_scale_commercial\n# ℹ 4 more variables: recreational &lt;dbl&gt;, subsistence &lt;dbl&gt;, artisanal &lt;dbl&gt;,\n#   industrial &lt;dbl&gt;\nglobal_catch %&gt;% \n  clean_names() %&gt;% \n  mutate(artisanal = artisanal_small_scale_commercial/1000000,\n         industrial = industrial_large_scale_commercial/1000000) %&gt;% # same as above\n  \n  # new function: select\n  # select the columns you're interested in \n  select(year, artisanal, industrial)\n\n# A tibble: 61 × 3\n    year artisanal industrial\n   &lt;dbl&gt;     &lt;dbl&gt;      &lt;dbl&gt;\n 1  1950      7.53       14.6\n 2  1951      8.28       15.4\n 3  1952      8.27       16.5\n 4  1953      8.47       17.2\n 5  1954      9.23       18.3\n 6  1955      9.55       18.7\n 7  1956     10.3        19.9\n 8  1957     10.4        20.0\n 9  1958     10.2        20.5\n10  1959     10.4        23.4\n# ℹ 51 more rows\nglobal_catch %&gt;% \n  clean_names() %&gt;% \n  mutate(artisanal = artisanal_small_scale_commercial/1000000,\n         industrial = industrial_large_scale_commercial/1000000) %&gt;% \n  select(year, artisanal, industrial) %&gt;% # same as above\n  \n  # new function: pivot_longer\n  # put the data frame in long format: each row is an observation\n  # in this case, each row is a fishery with some catch (in million tons) in a given year\n  pivot_longer(cols = artisanal:industrial)\n\n# A tibble: 122 × 3\n    year name       value\n   &lt;dbl&gt; &lt;chr&gt;      &lt;dbl&gt;\n 1  1950 artisanal   7.53\n 2  1950 industrial 14.6 \n 3  1951 artisanal   8.28\n 4  1951 industrial 15.4 \n 5  1952 artisanal   8.27\n 6  1952 industrial 16.5 \n 7  1953 artisanal   8.47\n 8  1953 industrial 17.2 \n 9  1954 artisanal   9.23\n10  1954 industrial 18.3 \n# ℹ 112 more rows\nglobal_catch %&gt;% \n  clean_names() %&gt;% \n  mutate(artisanal = artisanal_small_scale_commercial/1000000,\n         industrial = industrial_large_scale_commercial/1000000) %&gt;% \n  select(year, artisanal, industrial) %&gt;% \n  pivot_longer(cols = artisanal:industrial) %&gt;% # same as above\n  \n  # new function: rename\n  # renames columns so that they are easier to understand\n  # arguments: \"new name\" = \"old name\"\n  rename(catch_mil = value,\n         fishery_type = name) \n\n# A tibble: 122 × 3\n    year fishery_type catch_mil\n   &lt;dbl&gt; &lt;chr&gt;            &lt;dbl&gt;\n 1  1950 artisanal         7.53\n 2  1950 industrial       14.6 \n 3  1951 artisanal         8.28\n 4  1951 industrial       15.4 \n 5  1952 artisanal         8.27\n 6  1952 industrial       16.5 \n 7  1953 artisanal         8.47\n 8  1953 industrial       17.2 \n 9  1954 artisanal         9.23\n10  1954 industrial       18.3 \n# ℹ 112 more rows\nglobal_catch %&gt;% \n  clean_names() %&gt;% \n  mutate(artisanal = artisanal_small_scale_commercial/1000000,\n         industrial = industrial_large_scale_commercial/1000000) %&gt;% \n  select(year, artisanal, industrial) %&gt;% \n  pivot_longer(cols = artisanal:industrial) %&gt;% \n  rename(catch_mil = value,\n         fishery_type = name) %&gt;% # same as above\n  \n  # new function: mutate with case_when\n  # creates new column of full names for fisheries\n  mutate(fishery_full_name = case_when(\n    fishery_type == \"artisanal\" ~ \"Artisanal fishery\",\n    fishery_type == \"industrial\" ~ \"Industrial fishery\"\n  ))\n\n# A tibble: 122 × 4\n    year fishery_type catch_mil fishery_full_name \n   &lt;dbl&gt; &lt;chr&gt;            &lt;dbl&gt; &lt;chr&gt;             \n 1  1950 artisanal         7.53 Artisanal fishery \n 2  1950 industrial       14.6  Industrial fishery\n 3  1951 artisanal         8.28 Artisanal fishery \n 4  1951 industrial       15.4  Industrial fishery\n 5  1952 artisanal         8.27 Artisanal fishery \n 6  1952 industrial       16.5  Industrial fishery\n 7  1953 artisanal         8.47 Artisanal fishery \n 8  1953 industrial       17.2  Industrial fishery\n 9  1954 artisanal         9.23 Artisanal fishery \n10  1954 industrial       18.3  Industrial fishery\n# ℹ 112 more rows\nglobal_catch %&gt;% \n  clean_names() %&gt;% \n  mutate(artisanal = artisanal_small_scale_commercial/1000000,\n         industrial = industrial_large_scale_commercial/1000000) %&gt;% \n  select(year, artisanal, industrial) %&gt;% \n  pivot_longer(cols = artisanal:industrial) %&gt;% \n  rename(catch_mil = value,\n         fishery_type = name) %&gt;% \n  mutate(fishery_full_name = case_when(\n    fishery_type == \"artisanal\" ~ \"Artisanal fishery\",\n    fishery_type == \"industrial\" ~ \"Industrial fishery\"\n  )) %&gt;% # same as above\n  \n  # new function: filter\n  # filters data frame for observations after 1980\n  filter(year &gt; 1980)\n\n# A tibble: 60 × 4\n    year fishery_type catch_mil fishery_full_name \n   &lt;dbl&gt; &lt;chr&gt;            &lt;dbl&gt; &lt;chr&gt;             \n 1  1981 artisanal         15.3 Artisanal fishery \n 2  1981 industrial        62.5 Industrial fishery\n 3  1982 artisanal         15.2 Artisanal fishery \n 4  1982 industrial        67.5 Industrial fishery\n 5  1983 artisanal         15.3 Artisanal fishery \n 6  1983 industrial        65.7 Industrial fishery\n 7  1984 artisanal         16.1 Artisanal fishery \n 8  1984 industrial        70.6 Industrial fishery\n 9  1985 artisanal         16.4 Artisanal fishery \n10  1985 industrial        73.5 Industrial fishery\n# ℹ 50 more rows\nAll together to create a data frame called global_catch_clean\nglobal_catch_clean &lt;- global_catch %&gt;% \n  \n  # makes the column names nicer\n  clean_names() %&gt;% \n  \n  # divides catch by 1000000 to calculate catch in million tons\n  mutate(artisanal = artisanal_small_scale_commercial/1000000,\n         industrial = industrial_large_scale_commercial/1000000) %&gt;% \n  \n  # selecting columns\n  select(year, artisanal, industrial) %&gt;% \n  \n  # put the data frame in long format: each row is an observation\n  pivot_longer(cols = artisanal:industrial) %&gt;% \n  \n  # renames columns so that they are easier to understand\n  rename(catch_mil = value,\n         fishery_type = name) %&gt;% \n  \n  # creates new column of full names for fisheries\n  mutate(fishery_full_name = case_when(\n    fishery_type == \"artisanal\" ~ \"Artisanal fishery\",\n    fishery_type == \"industrial\" ~ \"Industrial fishery\"\n  )) %&gt;% \n  \n  # filters data frame for observations after 1980\n  filter(year &gt; 1980)",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Cleaning</span>"
    ]
  },
  {
    "objectID": "05_visualizing.html",
    "href": "05_visualizing.html",
    "title": "5  Visualizing",
    "section": "",
    "text": "5.1 Visualize it\nlibrary(tidyverse)\nlibrary(janitor)\nlibrary(here)\n\nglobal_catch &lt;- read_csv(here(\"data\", # data is in the \"data\" folder in this repository\n                         \"global-fishery-catch-by-sector.csv\")) # file name\n\nglobal_catch_clean &lt;- global_catch %&gt;% \n  \n  # makes the column names nicer\n  clean_names() %&gt;% \n  \n  # divides catch by 1000000 to calculate catch in million tons\n  mutate(artisanal = artisanal_small_scale_commercial/1000000,\n         industrial = industrial_large_scale_commercial/1000000) %&gt;% \n  \n  # selecting columns\n  select(year, artisanal, industrial) %&gt;% \n  \n  # put the data frame in long format: each row is an observation\n  pivot_longer(cols = artisanal:industrial) %&gt;% \n  \n  # renames columns so that they are easier to understand\n  rename(catch_mil = value,\n         fishery_type = name) %&gt;% \n  \n  # creates new column of full names for fisheries\n  mutate(fishery_full_name = case_when(\n    fishery_type == \"artisanal\" ~ \"Artisanal fishery\",\n    fishery_type == \"industrial\" ~ \"Industrial fishery\"\n  )) %&gt;% \n  \n  # filters data frame for observations after 1980\n  filter(year &gt; 1980)\nHistogram:\n# for this example, only going to use the artisanal fishery\nartisanal &lt;- global_catch_clean %&gt;% \n  filter(fishery_type == \"artisanal\")\n\n# global ggplot call\nggplot(data = artisanal, # the data frame\n       aes(x = catch_mil)) + # the x-axis\n  \n  # creating a histogram\n  geom_histogram(bins = 7, # number of columns/bins\n                 fill = \"darkgreen\", # filling the bars in green\n                 color = \"black\") + # outline of the bars: black\n  \n  # extra stuff to make your plot look nicer\n  scale_y_continuous(expand = c(0, 0), # gets rid of the space below the bars\n                     limits = c(0, 9)) + # sets the limits of the y-axis\n  theme_bw() # clears out the grey background\n# simple way to create a jitter plot\nggplot(data = global_catch_clean, # data frame\n       aes(x = fishery_full_name, # x-axis\n           y = catch_mil)) + # y-axis\n  geom_jitter()\n\n\n\n\n\n\n\n# a way with a little more control over the jitter\nggplot(data = global_catch_clean, # data frame\n       aes(x = fishery_full_name, # x-axis\n           y = catch_mil)) + # y-axis\n  geom_jitter(position = position_jitter(\n    width = 0.2, # shakes the points around left and right \n    height = 0, # doesn't shake the points up and down\n    seed = 1 # makes sure the \"random\" arrangement stays the same\n  ))\nggplot(data = global_catch_clean, # data frame\n       aes(x = year, # x-axis\n           y = catch_mil,\n           color = fishery_type)) + # y-axis\n  geom_point()\nggplot(data = global_catch_clean, # data frame\n       aes(x = fishery_full_name, # x-axis\n           y = catch_mil)) +\n  geom_boxplot()",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Visualizing</span>"
    ]
  }
]