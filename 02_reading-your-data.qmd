---
title: "Reading your data"
execute:
  message: false
  warning: false
  eval: false
---

## Reading your data into RStudio

If your file is in a folder called "data" like in this repository:

```{r}
#| eval: false

test_data <- read_csv(here("data", # folder name: data
                           "data.csv")) # file name: data.csv
```

If your file is in the root directory (i.e. the same folder as the .Rproj file)

```{r}
#| eval: false

test_data <- read_csv("data.csv") # just the file name
```

If your file is an Excel sheet:

```{r}
#| eval: false

data_from_excel <- read_xlsx("data.xlsx", # file name
                             sheet = "This is the sheet name", # if there are multiple sheets in the .xlsx file
                             na = c("NA")) # explicitly name what the NAs are in the sheet - not necessary, but sometimes nice!
```

If your file is on Dropbox: 

```{r}
#| eval: false

data_from_dropbox <- source_data("share link goes here") # paste the share link, change dl=0 to dl=1 at the end (dono't know why but it works!)
```

If your file is on google sheets:

```{r}
#| eval: false

# get the sheet id from the url
sheet_id <- "insert sheet id here"

data_from_google_sheets <- read_sheet(sheet_id, # the sheet id that you stored above
                                      sheet = "insert sheet name here") # if you have multiple sheets, you can select the sheet you want
```

Note that when you run this, `googlesheets4` will ask for authentication. Critically, this only works if you are there to interact with the package (i.e. actually authenticate yourself); therefore, this _is not a good option_ if you are rendering/knitting your code. One solution is to make the sheet public (which isn't always ideal). Another solution is to have a separate script in your project that reads stuff in from Google Sheets and creates .csv files on your computer, and use the .csv files downloaded from Google Sheets in your down stream analysis. 