{
  "hash": "54b6cdd1ec98bfc3cf24b3f7480ce2d6",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Reading your data\"\nexecute:\n  message: false\n  warning: false\n  eval: false\n---\n\n\n## Reading your data into RStudio\n\nIf your file is in a folder called \"data\" like in this repository:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntest_data <- read_csv(here(\"data\", # folder name: data\n                           \"data.csv\")) # file name: data.csv\n```\n:::\n\n\nIf your file is in the root directory (i.e. the same folder as the .Rproj file)\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntest_data <- read_csv(\"data.csv\") # just the file name\n```\n:::\n\n\nIf your file is an Excel sheet:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_from_excel <- read_xlsx(\"data.xlsx\", # file name\n                             sheet = \"This is the sheet name\", # if there are multiple sheets in the .xlsx file\n                             na = c(\"NA\")) # explicitly name what the NAs are in the sheet - not necessary, but sometimes nice!\n```\n:::\n\n\nIf your file is on Dropbox: \n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_from_dropbox <- source_data(\"share link goes here\") # paste the share link, change dl=0 to dl=1 at the end (dono't know why but it works!)\n```\n:::\n\n\nIf your file is on google sheets:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# get the sheet id from the url\nsheet_id <- \"insert sheet id here\"\n\ndata_from_google_sheets <- read_sheet(sheet_id, # the sheet id that you stored above\n                                      sheet = \"insert sheet name here\") # if you have multiple sheets, you can select the sheet you want\n```\n:::\n\n\nNote that when you run this, `googlesheets4` will ask for authentication. Critically, this only works if you are there to interact with the package (i.e. actually authenticate yourself); therefore, this _is not a good option_ if you are rendering/knitting your code. One solution is to make the sheet public (which isn't always ideal). Another solution is to have a separate script in your project that reads stuff in from Google Sheets and creates .csv files on your computer, and use the .csv files downloaded from Google Sheets in your down stream analysis. ",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}