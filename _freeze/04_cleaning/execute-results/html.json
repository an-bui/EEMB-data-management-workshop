{
  "hash": "95361ca896ffaa80ba31e04ef7a46467",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Cleaning\"\nexecute:\n  message: false\n  warning: false\n---\n\n\n## Clean it up\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(janitor)\nlibrary(here)\n\nglobal_catch <- read_csv(here(\"data\", # data is in the \"data\" folder in this repository\n                         \"global-fishery-catch-by-sector.csv\")) # file name\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nglobal_catch %>% \n  # new function: clean_names\n  # makes the column names nicer! compare this with the column names from `colnames(global_catch)` output from above\n  clean_names()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 61 × 8\n   entity code      year artisanal_small_scale…¹ discards industrial_large_sca…²\n   <chr>  <chr>    <dbl>                   <dbl>    <dbl>                  <dbl>\n 1 World  OWID_WRL  1950                 7526795  5874170               14566338\n 2 World  OWID_WRL  1951                 8278304  6278225               15417937\n 3 World  OWID_WRL  1952                 8272109  7230311               16463942\n 4 World  OWID_WRL  1953                 8469284  7172937               17163789\n 5 World  OWID_WRL  1954                 9226926  8012930               18340199\n 6 World  OWID_WRL  1955                 9545554  8340179               18728089\n 7 World  OWID_WRL  1956                10303408  8692551               19902604\n 8 World  OWID_WRL  1957                10425695  8998732               20030089\n 9 World  OWID_WRL  1958                10172920  9255992               20520801\n10 World  OWID_WRL  1959                10385711  9908003               23422702\n# ℹ 51 more rows\n# ℹ abbreviated names: ¹​artisanal_small_scale_commercial,\n#   ²​industrial_large_scale_commercial\n# ℹ 2 more variables: recreational <dbl>, subsistence <dbl>\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nglobal_catch %>% \n  clean_names() %>% # same as above\n\n  # new function: mutate\n  # create new columns to calculate catch divided by 1000000\n  mutate(artisanal = artisanal_small_scale_commercial/1000000,\n         industrial = industrial_large_scale_commercial/1000000)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 61 × 10\n   entity code      year artisanal_small_scale…¹ discards industrial_large_sca…²\n   <chr>  <chr>    <dbl>                   <dbl>    <dbl>                  <dbl>\n 1 World  OWID_WRL  1950                 7526795  5874170               14566338\n 2 World  OWID_WRL  1951                 8278304  6278225               15417937\n 3 World  OWID_WRL  1952                 8272109  7230311               16463942\n 4 World  OWID_WRL  1953                 8469284  7172937               17163789\n 5 World  OWID_WRL  1954                 9226926  8012930               18340199\n 6 World  OWID_WRL  1955                 9545554  8340179               18728089\n 7 World  OWID_WRL  1956                10303408  8692551               19902604\n 8 World  OWID_WRL  1957                10425695  8998732               20030089\n 9 World  OWID_WRL  1958                10172920  9255992               20520801\n10 World  OWID_WRL  1959                10385711  9908003               23422702\n# ℹ 51 more rows\n# ℹ abbreviated names: ¹​artisanal_small_scale_commercial,\n#   ²​industrial_large_scale_commercial\n# ℹ 4 more variables: recreational <dbl>, subsistence <dbl>, artisanal <dbl>,\n#   industrial <dbl>\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nglobal_catch %>% \n  clean_names() %>% \n  mutate(artisanal = artisanal_small_scale_commercial/1000000,\n         industrial = industrial_large_scale_commercial/1000000) %>% # same as above\n  \n  # new function: select\n  # select the columns you're interested in \n  select(year, artisanal, industrial)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 61 × 3\n    year artisanal industrial\n   <dbl>     <dbl>      <dbl>\n 1  1950      7.53       14.6\n 2  1951      8.28       15.4\n 3  1952      8.27       16.5\n 4  1953      8.47       17.2\n 5  1954      9.23       18.3\n 6  1955      9.55       18.7\n 7  1956     10.3        19.9\n 8  1957     10.4        20.0\n 9  1958     10.2        20.5\n10  1959     10.4        23.4\n# ℹ 51 more rows\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nglobal_catch %>% \n  clean_names() %>% \n  mutate(artisanal = artisanal_small_scale_commercial/1000000,\n         industrial = industrial_large_scale_commercial/1000000) %>% \n  select(year, artisanal, industrial) %>% # same as above\n  \n  # new function: pivot_longer\n  # put the data frame in long format: each row is an observation\n  # in this case, each row is a fishery with some catch (in million tons) in a given year\n  pivot_longer(cols = artisanal:industrial)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 122 × 3\n    year name       value\n   <dbl> <chr>      <dbl>\n 1  1950 artisanal   7.53\n 2  1950 industrial 14.6 \n 3  1951 artisanal   8.28\n 4  1951 industrial 15.4 \n 5  1952 artisanal   8.27\n 6  1952 industrial 16.5 \n 7  1953 artisanal   8.47\n 8  1953 industrial 17.2 \n 9  1954 artisanal   9.23\n10  1954 industrial 18.3 \n# ℹ 112 more rows\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nglobal_catch %>% \n  clean_names() %>% \n  mutate(artisanal = artisanal_small_scale_commercial/1000000,\n         industrial = industrial_large_scale_commercial/1000000) %>% \n  select(year, artisanal, industrial) %>% \n  pivot_longer(cols = artisanal:industrial) %>% # same as above\n  \n  # new function: rename\n  # renames columns so that they are easier to understand\n  # arguments: \"new name\" = \"old name\"\n  rename(catch_mil = value,\n         fishery_type = name) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 122 × 3\n    year fishery_type catch_mil\n   <dbl> <chr>            <dbl>\n 1  1950 artisanal         7.53\n 2  1950 industrial       14.6 \n 3  1951 artisanal         8.28\n 4  1951 industrial       15.4 \n 5  1952 artisanal         8.27\n 6  1952 industrial       16.5 \n 7  1953 artisanal         8.47\n 8  1953 industrial       17.2 \n 9  1954 artisanal         9.23\n10  1954 industrial       18.3 \n# ℹ 112 more rows\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nglobal_catch %>% \n  clean_names() %>% \n  mutate(artisanal = artisanal_small_scale_commercial/1000000,\n         industrial = industrial_large_scale_commercial/1000000) %>% \n  select(year, artisanal, industrial) %>% \n  pivot_longer(cols = artisanal:industrial) %>% \n  rename(catch_mil = value,\n         fishery_type = name) %>% # same as above\n  \n  # new function: mutate with case_when\n  # creates new column of full names for fisheries\n  mutate(fishery_full_name = case_when(\n    fishery_type == \"artisanal\" ~ \"Artisanal fishery\",\n    fishery_type == \"industrial\" ~ \"Industrial fishery\"\n  ))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 122 × 4\n    year fishery_type catch_mil fishery_full_name \n   <dbl> <chr>            <dbl> <chr>             \n 1  1950 artisanal         7.53 Artisanal fishery \n 2  1950 industrial       14.6  Industrial fishery\n 3  1951 artisanal         8.28 Artisanal fishery \n 4  1951 industrial       15.4  Industrial fishery\n 5  1952 artisanal         8.27 Artisanal fishery \n 6  1952 industrial       16.5  Industrial fishery\n 7  1953 artisanal         8.47 Artisanal fishery \n 8  1953 industrial       17.2  Industrial fishery\n 9  1954 artisanal         9.23 Artisanal fishery \n10  1954 industrial       18.3  Industrial fishery\n# ℹ 112 more rows\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nglobal_catch %>% \n  clean_names() %>% \n  mutate(artisanal = artisanal_small_scale_commercial/1000000,\n         industrial = industrial_large_scale_commercial/1000000) %>% \n  select(year, artisanal, industrial) %>% \n  pivot_longer(cols = artisanal:industrial) %>% \n  rename(catch_mil = value,\n         fishery_type = name) %>% \n  mutate(fishery_full_name = case_when(\n    fishery_type == \"artisanal\" ~ \"Artisanal fishery\",\n    fishery_type == \"industrial\" ~ \"Industrial fishery\"\n  )) %>% # same as above\n  \n  # new function: filter\n  # filters data frame for observations after 1980\n  filter(year > 1980)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 60 × 4\n    year fishery_type catch_mil fishery_full_name \n   <dbl> <chr>            <dbl> <chr>             \n 1  1981 artisanal         15.3 Artisanal fishery \n 2  1981 industrial        62.5 Industrial fishery\n 3  1982 artisanal         15.2 Artisanal fishery \n 4  1982 industrial        67.5 Industrial fishery\n 5  1983 artisanal         15.3 Artisanal fishery \n 6  1983 industrial        65.7 Industrial fishery\n 7  1984 artisanal         16.1 Artisanal fishery \n 8  1984 industrial        70.6 Industrial fishery\n 9  1985 artisanal         16.4 Artisanal fishery \n10  1985 industrial        73.5 Industrial fishery\n# ℹ 50 more rows\n```\n\n\n:::\n:::\n\n\nAll together to create a data frame called `global_catch_clean`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglobal_catch_clean <- global_catch %>% \n  \n  # makes the column names nicer\n  clean_names() %>% \n  \n  # divides catch by 1000000 to calculate catch in million tons\n  mutate(artisanal = artisanal_small_scale_commercial/1000000,\n         industrial = industrial_large_scale_commercial/1000000) %>% \n  \n  # selecting columns\n  select(year, artisanal, industrial) %>% \n  \n  # put the data frame in long format: each row is an observation\n  pivot_longer(cols = artisanal:industrial) %>% \n  \n  # renames columns so that they are easier to understand\n  rename(catch_mil = value,\n         fishery_type = name) %>% \n  \n  # creates new column of full names for fisheries\n  mutate(fishery_full_name = case_when(\n    fishery_type == \"artisanal\" ~ \"Artisanal fishery\",\n    fishery_type == \"industrial\" ~ \"Industrial fishery\"\n  )) %>% \n  \n  # filters data frame for observations after 1980\n  filter(year > 1980)\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}